# { Generics } {{{
snippet "ifm(ain)?" "ifmain" brA
if __name__ == '__main__':
	${1:${VISUAL:main()}}
endsnippet

snippet "she?b(ang)?" "shebang" brA
#!/usr/bin/env python3
endsnippet

snippet db "ipdb" bA
import ipdb; ipdb.set_trace()
endsnippet

snippet enu "enumerate" iA
enumerate(${1:${VISUAL}})$0
endsnippet
# }}}

# { Libraries } {{{
snippet impl "pyplot" bA
import matplotlib.pyplot as plt
endsnippet

snippet imnp "numpy" bA
import numpy as np
endsnippet

snippet imgb "glob" bA
from glob import glob
endsnippet

snippet imtq "tqdm" bA
from tqdm import tqdm
endsnippet

snippet immp "multiprocessing" bA
from pathos.multiprocessing import ProcessingPool as Pool
endsnippet

snippet imya "yaml" bA
from ruamel.yaml import YAML
yaml = YAML(typ='safe')$0
endsnippet

snippet imap "argparse" bA
import argparse

parser = argparse.ArgumentParser()
parser.add_argument(
	'$1',
	default='$2',
	help='$3'
)
args = parser.parse_args()$0
endsnippet
# }}}

snippet pr "print variable" b
print('$1:', ${1:${VISUAL}})
endsnippet
